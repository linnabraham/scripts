#!/bin/bash

create_note () {
    if [ ! -f $note_path ]; then
        mkdir -p $notes/$year/$month/
        touch $note_path
        printf "$day-$month-$year\n---\n\n" > $note_path
        printf "Created new note: $note_path\n"
    else
        printf "Note \"$note_path\" already exists. Saving changes to existing file.\n"
    fi
}

print_info () {
    printf "Note preview:\n====================\n\n"
    head -n 8 $note_path
    printf "\n====================\n"
    printf "Note Stats:\n"
    stat $note_path
    printf "\n====================\n"
    printf "File Information:\n"
    ls -lah $note_path
}

print_help () {
    printf "note - Note Keeper 0.3.4 (14 Feb 2019)

Usage: note [arguments]

Arguments:
  -h | --help                         Display usage guide.
  -e | --edit <DATE: year-month-day>  Open a specific note for editing.
  -p | --print                        Print the contents of a note.
  -c | --create                       Create a note but don't open it for editing.
  -i | --info                         Print information about a note.\n"
}

open_note () {
    if [[ $EDITOR = *"vim"* ]] || [[ $EDITOR = *"nvim"* ]]; then
        # Open Vim or Neovim in insert mode.
        $EDITOR "+normal G$" +startinsert! $note_path
    elif [[ $EDITOR = *"emacs"* ]]; then
        # Open Emacs with cursor at EOF.
        emacs -nw $note_path --eval "(goto-char (point-max))"
    elif [[ $EDITOR = "" ]]; then
        # If no default editor, use Vim and open in insert mode.
        vim "+normal G$" +startinsert! $note_path
    else
        $EDITOR $note_path
    fi
}

notes="$HOME/Dropbox/jots"
if (( $# > 0 )); then
ndate="$(dateparse $1)"
year="$(echo $ndate | cut -d'/' -f 1)"
month="$(echo $ndate | cut -d'/' -f 2)"
day="$(echo $ndate | cut -d'/' -f 3)"

else
year=`date +'%Y'`
month=`date +'%m'`
day=`date +'%d'`
fi

note_path=$notes/$year/$month/$day.md

create_note
open_note
